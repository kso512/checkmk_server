---
# tasks file for checkmk_server
- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file | INCLUDE_VARS
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution_release }}.{{ ansible_distribution }}.yml"
        - "{{ ansible_distribution }}.{{ ansible_distribution_major_version }}.yml"
        - default.yml
      paths:
        - 'vars'
  tags:
    - checkmk-server
- name: Replace systemctl with docker-systemctl-replacement | GET_URL
  ansible.builtin.get_url:
    dest: "{{ checkmk_server_systemctl_dest }}"
    mode: "{{ checkmk_server_systemctl_mode }}"
    url: "{{ checkmk_server_systemctl_url }}"
  tags:
    - checkmk-server
- name: Install pre-requisites | APT
  ansible.builtin.apt:
    name: "{{ checkmk_server_prerequisites }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ checkmk_server_cache_valid_time }}"
  when: ansible_pkg_mgr == "apt"
  tags:
    - checkmk-server
- name: Install pre-requisites | DNF
  ansible.builtin.dnf:
    name: "{{ checkmk_server_prerequisites }}"
    state: present
    update_cache: yes
    enablerepo: "PowerTools"
  when: ansible_pkg_mgr == "dnf"
  tags:
    - checkmk-server
- name: Import a key from a URL | RPM_KEY
  ansible.builtin.rpm_key:
    key: "{{ checkmk_server_key_url }}"
    state: present
  when: ansible_pkg_mgr != "apt"
  tags:
    - checkmk-server
- name: Download CheckMK RAW | GET_URL
  ansible.builtin.get_url:
    dest: "{{ checkmk_server_download_dest }}"
    mode: "{{ checkmk_server_download_mode }}"
    url: "{{ checkmk_server_download_url }}"
    checksum: "{{ checkmk_server_download_checksum }}"
  tags:
    - checkmk-server
- name: Make sure the man8 folder exists | FILE
  ansible.builtin.file:
    path: "{{ checkmk_server_man_path }}"
    state: directory
    mode: "{{ checkmk_server_man_mode }}"
  tags:
    - checkmk-server
- name: Install CheckMK RAW | APT
  ansible.builtin.apt:
    deb: "{{ checkmk_server_install_package }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ checkmk_server_cache_valid_time }}"
  when: ansible_pkg_mgr == "apt"
  tags:
    - checkmk-server
- name: Install CheckMK RAW | DNF
  ansible.builtin.dnf:
    name: "{{ checkmk_server_install_package }}"
    state: present
  when: ansible_pkg_mgr == "dnf"
  tags:
    - checkmk-server
- name: Setup OMD | COMMAND
  ansible.builtin.command: "{{ checkmk_server_omd_setup_command }}"
  args:
    creates: "{{ checkmk_server_omd_setup_creates }}"
  tags:
    - checkmk-server
- name: Create OMD site | COMMAND
  ansible.builtin.command: "{{ checkmk_server_omd_create_command }}"
  args:
    creates: "{{ checkmk_server_omd_create_creates }}"
  register: checkmk_server_omd_create_register
  tags:
    - checkmk-server
- name: Log captured creation task | COPY
  ansible.builtin.copy:
    content: "{{ checkmk_server_omd_create_register }}"
    dest: "{{ checkmk_server_log_dest }}"
    group: "{{ checkmk_server_log_group }}"
    owner: "{{ checkmk_server_log_owner }}"
    mode: "{{ checkmk_server_log_mode }}"
    force: no
  when: checkmk_server_adminpw is undefined
  tags:
    - checkmk-server
- name: Change OMD site admin password | HTPASSWD
  community.general.htpasswd:
    create: yes
    group: "{{ checkmk_server_htpasswd_group }}"
    owner: "{{ checkmk_server_htpasswd_owner }}"
    mode: "{{ checkmk_server_htpasswd_mode }}"
    name: "{{ checkmk_server_htpasswd_name }}"
    path: "{{ checkmk_server_htpasswd_path }}"
    password: "{{ checkmk_server_adminpw }}"
  become: true
  become_user: "{{ checkmk_server_htpasswd_owner }}"
  vars:
    ansible_ssh_pipelining: yes
  when: checkmk_server_adminpw is defined
  tags:
    - checkmk-server
- name: Start OMD site | COMMAND
  ansible.builtin.command: "{{ checkmk_server_omd_start_command }}"
  args:
    creates: "{{ checkmk_server_omd_start_creates }}"
  tags:
    - checkmk-server
- name: Start and enable Apache2 | SERVICE
  ansible.builtin.service:
    name: "{{ checkmk_server_web_service }}"
    state: started
    enabled: yes
  tags:
    - checkmk-server
...
